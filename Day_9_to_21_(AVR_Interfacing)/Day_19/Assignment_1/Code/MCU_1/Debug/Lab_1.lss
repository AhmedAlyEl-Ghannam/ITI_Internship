
Lab_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000006c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000508  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  00000508  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  00000537  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000e0  00000000  00000000  00000545  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001860  00000000  00000000  00000625  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000725  00000000  00000000  00001e85  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000992  00000000  00000000  000025aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000254  00000000  00000000  00002f3c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001eb  00000000  00000000  00003190  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000dd9  00000000  00000000  0000337b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d0  00000000  00000000  00004154  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000486  00000486  000004fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00004224  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.DIO_voidSetPinDirection 000000ec  00000084  00000084  000000f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.DIO_voidSetPinValue 000000ec  00000170  00000170  000001e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.DIO_u8GetPinValue 0000006a  0000033a  0000033a  000003ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.DIO_voidSetPortValue 00000024  0000042a  0000042a  0000049e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.USART_voidInit 0000002a  00000400  00000400  00000474  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.USART_voidSendData 00000008  0000047e  0000047e  000004f2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.KPD_voidInit 0000005c  000003a4  000003a4  00000418  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.KPD_u8GetPressedKey 000000de  0000025c  0000025c  000002d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.main    0000001a  0000044e  0000044e  000004c2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .progmemx.data.KPD_u8ColPinsArr 00000004  0000007c  0000007c  000000f0  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 24 .progmemx.data.KPD_u8RowPinsArr 00000004  00000080  00000080  000000f4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 25 .progmemx.data.KPD_u8CharArr 00000010  0000006c  0000006c  000000e0  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 26 .text.__dummy_fini 00000002  0000048e  0000048e  00000502  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.__dummy_funcs_on_exit 00000002  00000490  00000490  00000504  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.__dummy_simulator_exit 00000002  00000492  00000492  00000506  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.exit    00000016  00000468  00000468  000004dc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text._Exit   00000004  0000048a  0000048a  000004fe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 43 02 	jmp	0x486	; 0x486 <__bad_interrupt>
   8:	0c 94 43 02 	jmp	0x486	; 0x486 <__bad_interrupt>
   c:	0c 94 43 02 	jmp	0x486	; 0x486 <__bad_interrupt>
  10:	0c 94 43 02 	jmp	0x486	; 0x486 <__bad_interrupt>
  14:	0c 94 43 02 	jmp	0x486	; 0x486 <__bad_interrupt>
  18:	0c 94 43 02 	jmp	0x486	; 0x486 <__bad_interrupt>
  1c:	0c 94 43 02 	jmp	0x486	; 0x486 <__bad_interrupt>
  20:	0c 94 43 02 	jmp	0x486	; 0x486 <__bad_interrupt>
  24:	0c 94 43 02 	jmp	0x486	; 0x486 <__bad_interrupt>
  28:	0c 94 43 02 	jmp	0x486	; 0x486 <__bad_interrupt>
  2c:	0c 94 43 02 	jmp	0x486	; 0x486 <__bad_interrupt>
  30:	0c 94 43 02 	jmp	0x486	; 0x486 <__bad_interrupt>
  34:	0c 94 43 02 	jmp	0x486	; 0x486 <__bad_interrupt>
  38:	0c 94 43 02 	jmp	0x486	; 0x486 <__bad_interrupt>
  3c:	0c 94 43 02 	jmp	0x486	; 0x486 <__bad_interrupt>
  40:	0c 94 43 02 	jmp	0x486	; 0x486 <__bad_interrupt>
  44:	0c 94 43 02 	jmp	0x486	; 0x486 <__bad_interrupt>
  48:	0c 94 43 02 	jmp	0x486	; 0x486 <__bad_interrupt>
  4c:	0c 94 43 02 	jmp	0x486	; 0x486 <__bad_interrupt>
  50:	0c 94 43 02 	jmp	0x486	; 0x486 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 27 02 	call	0x44e	; 0x44e <main>
  64:	0c 94 34 02 	jmp	0x468	; 0x468 <exit>

00000068 <_exit>:
  68:	f8 94       	cli

0000006a <__stop_program>:
  6a:	ff cf       	rjmp	.-2      	; 0x6a <__stop_program>

Disassembly of section .text:

00000486 <__bad_interrupt>:
 486:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.DIO_voidSetPinDirection:

00000084 <DIO_voidSetPinDirection>:
	switch (copy_u8PortName)
	{
		case DIO_PORTA: SET_PORT_TO_VAL(DDRA, DIO_PORT_OUTPUT); break;
		case DIO_PORTB: SET_PORT_TO_VAL(DDRB, DIO_PORT_OUTPUT); break;
		case DIO_PORTC: SET_PORT_TO_VAL(DDRC, DIO_PORT_OUTPUT); break;
		case DIO_PORTD: SET_PORT_TO_VAL(DDRD, DIO_PORT_OUTPUT); break;
  84:	84 30       	cpi	r24, 0x04	; 4
  86:	08 f0       	brcs	.+2      	; 0x8a <DIO_voidSetPinDirection+0x6>
  88:	72 c0       	rjmp	.+228    	; 0x16e <DIO_voidSetPinDirection+0xea>
  8a:	68 30       	cpi	r22, 0x08	; 8
  8c:	08 f0       	brcs	.+2      	; 0x90 <DIO_voidSetPinDirection+0xc>
  8e:	6f c0       	rjmp	.+222    	; 0x16e <DIO_voidSetPinDirection+0xea>
  90:	42 30       	cpi	r20, 0x02	; 2
  92:	08 f0       	brcs	.+2      	; 0x96 <DIO_voidSetPinDirection+0x12>
  94:	6c c0       	rjmp	.+216    	; 0x16e <DIO_voidSetPinDirection+0xea>
  96:	81 30       	cpi	r24, 0x01	; 1
  98:	01 f1       	breq	.+64     	; 0xda <DIO_voidSetPinDirection+0x56>
  9a:	30 f0       	brcs	.+12     	; 0xa8 <DIO_voidSetPinDirection+0x24>
  9c:	82 30       	cpi	r24, 0x02	; 2
  9e:	b1 f1       	breq	.+108    	; 0x10c <DIO_voidSetPinDirection+0x88>
  a0:	83 30       	cpi	r24, 0x03	; 3
  a2:	09 f4       	brne	.+2      	; 0xa6 <DIO_voidSetPinDirection+0x22>
  a4:	4c c0       	rjmp	.+152    	; 0x13e <DIO_voidSetPinDirection+0xba>
  a6:	08 95       	ret
  a8:	41 30       	cpi	r20, 0x01	; 1
  aa:	59 f4       	brne	.+22     	; 0xc2 <DIO_voidSetPinDirection+0x3e>
  ac:	2a b3       	in	r18, 0x1a	; 26
  ae:	81 e0       	ldi	r24, 0x01	; 1
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <DIO_voidSetPinDirection+0x34>
  b4:	88 0f       	add	r24, r24
  b6:	99 1f       	adc	r25, r25
  b8:	6a 95       	dec	r22
  ba:	e2 f7       	brpl	.-8      	; 0xb4 <DIO_voidSetPinDirection+0x30>
  bc:	82 2b       	or	r24, r18
  be:	8a bb       	out	0x1a, r24	; 26
  c0:	08 95       	ret
  c2:	2a b3       	in	r18, 0x1a	; 26
  c4:	81 e0       	ldi	r24, 0x01	; 1
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	02 c0       	rjmp	.+4      	; 0xce <DIO_voidSetPinDirection+0x4a>
  ca:	88 0f       	add	r24, r24
  cc:	99 1f       	adc	r25, r25
  ce:	6a 95       	dec	r22
  d0:	e2 f7       	brpl	.-8      	; 0xca <DIO_voidSetPinDirection+0x46>
  d2:	80 95       	com	r24
  d4:	82 23       	and	r24, r18
  d6:	8a bb       	out	0x1a, r24	; 26
  d8:	08 95       	ret
  da:	41 30       	cpi	r20, 0x01	; 1
  dc:	59 f4       	brne	.+22     	; 0xf4 <DIO_voidSetPinDirection+0x70>
  de:	27 b3       	in	r18, 0x17	; 23
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	02 c0       	rjmp	.+4      	; 0xea <DIO_voidSetPinDirection+0x66>
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	6a 95       	dec	r22
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <DIO_voidSetPinDirection+0x62>
  ee:	82 2b       	or	r24, r18
  f0:	87 bb       	out	0x17, r24	; 23
  f2:	08 95       	ret
  f4:	27 b3       	in	r18, 0x17	; 23
  f6:	81 e0       	ldi	r24, 0x01	; 1
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	02 c0       	rjmp	.+4      	; 0x100 <DIO_voidSetPinDirection+0x7c>
  fc:	88 0f       	add	r24, r24
  fe:	99 1f       	adc	r25, r25
 100:	6a 95       	dec	r22
 102:	e2 f7       	brpl	.-8      	; 0xfc <DIO_voidSetPinDirection+0x78>
 104:	80 95       	com	r24
 106:	82 23       	and	r24, r18
 108:	87 bb       	out	0x17, r24	; 23
 10a:	08 95       	ret
 10c:	41 30       	cpi	r20, 0x01	; 1
 10e:	59 f4       	brne	.+22     	; 0x126 <DIO_voidSetPinDirection+0xa2>
 110:	24 b3       	in	r18, 0x14	; 20
 112:	81 e0       	ldi	r24, 0x01	; 1
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	02 c0       	rjmp	.+4      	; 0x11c <DIO_voidSetPinDirection+0x98>
 118:	88 0f       	add	r24, r24
 11a:	99 1f       	adc	r25, r25
 11c:	6a 95       	dec	r22
 11e:	e2 f7       	brpl	.-8      	; 0x118 <DIO_voidSetPinDirection+0x94>
 120:	82 2b       	or	r24, r18
 122:	84 bb       	out	0x14, r24	; 20
 124:	08 95       	ret
 126:	24 b3       	in	r18, 0x14	; 20
 128:	81 e0       	ldi	r24, 0x01	; 1
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	02 c0       	rjmp	.+4      	; 0x132 <DIO_voidSetPinDirection+0xae>
 12e:	88 0f       	add	r24, r24
 130:	99 1f       	adc	r25, r25
 132:	6a 95       	dec	r22
 134:	e2 f7       	brpl	.-8      	; 0x12e <DIO_voidSetPinDirection+0xaa>
 136:	80 95       	com	r24
 138:	82 23       	and	r24, r18
 13a:	84 bb       	out	0x14, r24	; 20
 13c:	08 95       	ret
 13e:	41 30       	cpi	r20, 0x01	; 1
 140:	59 f4       	brne	.+22     	; 0x158 <DIO_voidSetPinDirection+0xd4>
 142:	21 b3       	in	r18, 0x11	; 17
 144:	81 e0       	ldi	r24, 0x01	; 1
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	02 c0       	rjmp	.+4      	; 0x14e <DIO_voidSetPinDirection+0xca>
 14a:	88 0f       	add	r24, r24
 14c:	99 1f       	adc	r25, r25
 14e:	6a 95       	dec	r22
 150:	e2 f7       	brpl	.-8      	; 0x14a <DIO_voidSetPinDirection+0xc6>
 152:	82 2b       	or	r24, r18
 154:	81 bb       	out	0x11, r24	; 17
 156:	08 95       	ret
 158:	21 b3       	in	r18, 0x11	; 17
 15a:	81 e0       	ldi	r24, 0x01	; 1
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	02 c0       	rjmp	.+4      	; 0x164 <DIO_voidSetPinDirection+0xe0>
 160:	88 0f       	add	r24, r24
 162:	99 1f       	adc	r25, r25
 164:	6a 95       	dec	r22
 166:	e2 f7       	brpl	.-8      	; 0x160 <DIO_voidSetPinDirection+0xdc>
 168:	80 95       	com	r24
 16a:	82 23       	and	r24, r18
 16c:	81 bb       	out	0x11, r24	; 17
 16e:	08 95       	ret

Disassembly of section .text.DIO_voidSetPinValue:

00000170 <DIO_voidSetPinValue>:
 170:	84 30       	cpi	r24, 0x04	; 4
 172:	08 f0       	brcs	.+2      	; 0x176 <DIO_voidSetPinValue+0x6>
 174:	72 c0       	rjmp	.+228    	; 0x25a <DIO_voidSetPinValue+0xea>
 176:	68 30       	cpi	r22, 0x08	; 8
 178:	08 f0       	brcs	.+2      	; 0x17c <DIO_voidSetPinValue+0xc>
 17a:	6f c0       	rjmp	.+222    	; 0x25a <DIO_voidSetPinValue+0xea>
 17c:	42 30       	cpi	r20, 0x02	; 2
 17e:	08 f0       	brcs	.+2      	; 0x182 <DIO_voidSetPinValue+0x12>
 180:	6c c0       	rjmp	.+216    	; 0x25a <DIO_voidSetPinValue+0xea>
 182:	81 30       	cpi	r24, 0x01	; 1
 184:	01 f1       	breq	.+64     	; 0x1c6 <DIO_voidSetPinValue+0x56>
 186:	30 f0       	brcs	.+12     	; 0x194 <DIO_voidSetPinValue+0x24>
 188:	82 30       	cpi	r24, 0x02	; 2
 18a:	b1 f1       	breq	.+108    	; 0x1f8 <DIO_voidSetPinValue+0x88>
 18c:	83 30       	cpi	r24, 0x03	; 3
 18e:	09 f4       	brne	.+2      	; 0x192 <DIO_voidSetPinValue+0x22>
 190:	4c c0       	rjmp	.+152    	; 0x22a <DIO_voidSetPinValue+0xba>
 192:	08 95       	ret
 194:	41 30       	cpi	r20, 0x01	; 1
 196:	59 f4       	brne	.+22     	; 0x1ae <DIO_voidSetPinValue+0x3e>
 198:	2b b3       	in	r18, 0x1b	; 27
 19a:	81 e0       	ldi	r24, 0x01	; 1
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	02 c0       	rjmp	.+4      	; 0x1a4 <DIO_voidSetPinValue+0x34>
 1a0:	88 0f       	add	r24, r24
 1a2:	99 1f       	adc	r25, r25
 1a4:	6a 95       	dec	r22
 1a6:	e2 f7       	brpl	.-8      	; 0x1a0 <DIO_voidSetPinValue+0x30>
 1a8:	82 2b       	or	r24, r18
 1aa:	8b bb       	out	0x1b, r24	; 27
 1ac:	08 95       	ret
 1ae:	2b b3       	in	r18, 0x1b	; 27
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	02 c0       	rjmp	.+4      	; 0x1ba <DIO_voidSetPinValue+0x4a>
 1b6:	88 0f       	add	r24, r24
 1b8:	99 1f       	adc	r25, r25
 1ba:	6a 95       	dec	r22
 1bc:	e2 f7       	brpl	.-8      	; 0x1b6 <DIO_voidSetPinValue+0x46>
 1be:	80 95       	com	r24
 1c0:	82 23       	and	r24, r18
 1c2:	8b bb       	out	0x1b, r24	; 27
 1c4:	08 95       	ret
 1c6:	41 30       	cpi	r20, 0x01	; 1
 1c8:	59 f4       	brne	.+22     	; 0x1e0 <DIO_voidSetPinValue+0x70>
 1ca:	28 b3       	in	r18, 0x18	; 24
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	02 c0       	rjmp	.+4      	; 0x1d6 <DIO_voidSetPinValue+0x66>
 1d2:	88 0f       	add	r24, r24
 1d4:	99 1f       	adc	r25, r25
 1d6:	6a 95       	dec	r22
 1d8:	e2 f7       	brpl	.-8      	; 0x1d2 <DIO_voidSetPinValue+0x62>
 1da:	82 2b       	or	r24, r18
 1dc:	88 bb       	out	0x18, r24	; 24
 1de:	08 95       	ret
 1e0:	28 b3       	in	r18, 0x18	; 24
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	02 c0       	rjmp	.+4      	; 0x1ec <DIO_voidSetPinValue+0x7c>
 1e8:	88 0f       	add	r24, r24
 1ea:	99 1f       	adc	r25, r25
 1ec:	6a 95       	dec	r22
 1ee:	e2 f7       	brpl	.-8      	; 0x1e8 <DIO_voidSetPinValue+0x78>
 1f0:	80 95       	com	r24
 1f2:	82 23       	and	r24, r18
 1f4:	88 bb       	out	0x18, r24	; 24
 1f6:	08 95       	ret
 1f8:	41 30       	cpi	r20, 0x01	; 1
 1fa:	59 f4       	brne	.+22     	; 0x212 <DIO_voidSetPinValue+0xa2>
 1fc:	25 b3       	in	r18, 0x15	; 21
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	02 c0       	rjmp	.+4      	; 0x208 <DIO_voidSetPinValue+0x98>
 204:	88 0f       	add	r24, r24
 206:	99 1f       	adc	r25, r25
 208:	6a 95       	dec	r22
 20a:	e2 f7       	brpl	.-8      	; 0x204 <DIO_voidSetPinValue+0x94>
 20c:	82 2b       	or	r24, r18
 20e:	85 bb       	out	0x15, r24	; 21
 210:	08 95       	ret
 212:	25 b3       	in	r18, 0x15	; 21
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	02 c0       	rjmp	.+4      	; 0x21e <DIO_voidSetPinValue+0xae>
 21a:	88 0f       	add	r24, r24
 21c:	99 1f       	adc	r25, r25
 21e:	6a 95       	dec	r22
 220:	e2 f7       	brpl	.-8      	; 0x21a <DIO_voidSetPinValue+0xaa>
 222:	80 95       	com	r24
 224:	82 23       	and	r24, r18
 226:	85 bb       	out	0x15, r24	; 21
 228:	08 95       	ret
 22a:	41 30       	cpi	r20, 0x01	; 1
 22c:	59 f4       	brne	.+22     	; 0x244 <DIO_voidSetPinValue+0xd4>
 22e:	22 b3       	in	r18, 0x12	; 18
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	02 c0       	rjmp	.+4      	; 0x23a <DIO_voidSetPinValue+0xca>
 236:	88 0f       	add	r24, r24
 238:	99 1f       	adc	r25, r25
 23a:	6a 95       	dec	r22
 23c:	e2 f7       	brpl	.-8      	; 0x236 <DIO_voidSetPinValue+0xc6>
 23e:	82 2b       	or	r24, r18
 240:	82 bb       	out	0x12, r24	; 18
 242:	08 95       	ret
 244:	22 b3       	in	r18, 0x12	; 18
 246:	81 e0       	ldi	r24, 0x01	; 1
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	02 c0       	rjmp	.+4      	; 0x250 <DIO_voidSetPinValue+0xe0>
 24c:	88 0f       	add	r24, r24
 24e:	99 1f       	adc	r25, r25
 250:	6a 95       	dec	r22
 252:	e2 f7       	brpl	.-8      	; 0x24c <DIO_voidSetPinValue+0xdc>
 254:	80 95       	com	r24
 256:	82 23       	and	r24, r18
 258:	82 bb       	out	0x12, r24	; 18
 25a:	08 95       	ret

Disassembly of section .text.DIO_u8GetPinValue:

0000033a <DIO_u8GetPinValue>:
 33a:	84 30       	cpi	r24, 0x04	; 4
 33c:	78 f5       	brcc	.+94     	; 0x39c <DIO_u8GetPinValue+0x62>
 33e:	68 30       	cpi	r22, 0x08	; 8
 340:	78 f5       	brcc	.+94     	; 0x3a0 <DIO_u8GetPinValue+0x66>
 342:	81 30       	cpi	r24, 0x01	; 1
 344:	79 f0       	breq	.+30     	; 0x364 <DIO_u8GetPinValue+0x2a>
 346:	28 f0       	brcs	.+10     	; 0x352 <DIO_u8GetPinValue+0x18>
 348:	82 30       	cpi	r24, 0x02	; 2
 34a:	a9 f0       	breq	.+42     	; 0x376 <DIO_u8GetPinValue+0x3c>
 34c:	83 30       	cpi	r24, 0x03	; 3
 34e:	e1 f0       	breq	.+56     	; 0x388 <DIO_u8GetPinValue+0x4e>
 350:	24 c0       	rjmp	.+72     	; 0x39a <DIO_u8GetPinValue+0x60>
 352:	89 b3       	in	r24, 0x19	; 25
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	02 c0       	rjmp	.+4      	; 0x35c <DIO_u8GetPinValue+0x22>
 358:	95 95       	asr	r25
 35a:	87 95       	ror	r24
 35c:	6a 95       	dec	r22
 35e:	e2 f7       	brpl	.-8      	; 0x358 <DIO_u8GetPinValue+0x1e>
 360:	81 70       	andi	r24, 0x01	; 1
 362:	08 95       	ret
 364:	86 b3       	in	r24, 0x16	; 22
 366:	90 e0       	ldi	r25, 0x00	; 0
 368:	02 c0       	rjmp	.+4      	; 0x36e <DIO_u8GetPinValue+0x34>
 36a:	95 95       	asr	r25
 36c:	87 95       	ror	r24
 36e:	6a 95       	dec	r22
 370:	e2 f7       	brpl	.-8      	; 0x36a <DIO_u8GetPinValue+0x30>
 372:	81 70       	andi	r24, 0x01	; 1
 374:	08 95       	ret
 376:	83 b3       	in	r24, 0x13	; 19
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	02 c0       	rjmp	.+4      	; 0x380 <DIO_u8GetPinValue+0x46>
 37c:	95 95       	asr	r25
 37e:	87 95       	ror	r24
 380:	6a 95       	dec	r22
 382:	e2 f7       	brpl	.-8      	; 0x37c <DIO_u8GetPinValue+0x42>
 384:	81 70       	andi	r24, 0x01	; 1
 386:	08 95       	ret
 388:	80 b3       	in	r24, 0x10	; 16
 38a:	90 e0       	ldi	r25, 0x00	; 0
 38c:	02 c0       	rjmp	.+4      	; 0x392 <DIO_u8GetPinValue+0x58>
 38e:	95 95       	asr	r25
 390:	87 95       	ror	r24
 392:	6a 95       	dec	r22
 394:	e2 f7       	brpl	.-8      	; 0x38e <DIO_u8GetPinValue+0x54>
 396:	81 70       	andi	r24, 0x01	; 1
 398:	08 95       	ret
 39a:	08 95       	ret
 39c:	81 e0       	ldi	r24, 0x01	; 1
 39e:	08 95       	ret
 3a0:	82 e0       	ldi	r24, 0x02	; 2
 3a2:	08 95       	ret

Disassembly of section .text.DIO_voidSetPortValue:

0000042a <DIO_voidSetPortValue>:
	return; // DIO_OK
}

void DIO_voidSetPortValue(u8 copy_u8PortName, u8 copy_u8PortVal)
{
	if ((copy_u8PortName < DIO_PORTA) || (copy_u8PortName > DIO_PORTD))
 42a:	84 30       	cpi	r24, 0x04	; 4
 42c:	78 f4       	brcc	.+30     	; 0x44c <DIO_voidSetPortValue+0x22>
		return; // DIO_PORT_ARG_UNDEFINED
	
	if ((copy_u8PortVal < DIO_PORT_LOW) || (copy_u8PortVal > DIO_PORT_HIGH))
		return; // DIO_PORT_VAL_ARG_OUT_OF_BOUNDS
	
	switch (copy_u8PortName)
 42e:	81 30       	cpi	r24, 0x01	; 1
 430:	41 f0       	breq	.+16     	; 0x442 <DIO_voidSetPortValue+0x18>
 432:	28 f0       	brcs	.+10     	; 0x43e <DIO_voidSetPortValue+0x14>
 434:	82 30       	cpi	r24, 0x02	; 2
 436:	39 f0       	breq	.+14     	; 0x446 <DIO_voidSetPortValue+0x1c>
 438:	83 30       	cpi	r24, 0x03	; 3
 43a:	39 f0       	breq	.+14     	; 0x44a <DIO_voidSetPortValue+0x20>
 43c:	08 95       	ret
	{
		case DIO_PORTA: SET_PORT_TO_VAL(PORTA, copy_u8PortVal); break;
 43e:	6b bb       	out	0x1b, r22	; 27
 440:	08 95       	ret
		case DIO_PORTB: SET_PORT_TO_VAL(PORTB, copy_u8PortVal); break;
 442:	68 bb       	out	0x18, r22	; 24
 444:	08 95       	ret
		case DIO_PORTC: SET_PORT_TO_VAL(PORTC, copy_u8PortVal); break;
 446:	65 bb       	out	0x15, r22	; 21
 448:	08 95       	ret
		case DIO_PORTD: SET_PORT_TO_VAL(PORTD, copy_u8PortVal); break;
 44a:	62 bb       	out	0x12, r22	; 18
 44c:	08 95       	ret

Disassembly of section .text.USART_voidInit:

00000400 <USART_voidInit>:
	switch (copy_u8PortName)
	{
		case DIO_PORTA: SET_PORT_TO_VAL(DDRA, DIO_PORT_OUTPUT); break;
		case DIO_PORTB: SET_PORT_TO_VAL(DDRB, DIO_PORT_OUTPUT); break;
		case DIO_PORTC: SET_PORT_TO_VAL(DDRC, DIO_PORT_OUTPUT); break;
		case DIO_PORTD: SET_PORT_TO_VAL(DDRD, DIO_PORT_OUTPUT); break;
 400:	83 e3       	ldi	r24, 0x33	; 51
 402:	89 b9       	out	0x09, r24	; 9
 404:	10 bc       	out	0x20, r1	; 32
 406:	8b b1       	in	r24, 0x0b	; 11
 408:	8d 7f       	andi	r24, 0xFD	; 253
 40a:	8b b9       	out	0x0b, r24	; 11
 40c:	8b b1       	in	r24, 0x0b	; 11
 40e:	8e 7f       	andi	r24, 0xFE	; 254
 410:	8b b9       	out	0x0b, r24	; 11
 412:	8a b1       	in	r24, 0x0a	; 10
 414:	80 61       	ori	r24, 0x10	; 16
 416:	8a b9       	out	0x0a, r24	; 10
 418:	8a b1       	in	r24, 0x0a	; 10
 41a:	88 60       	ori	r24, 0x08	; 8
 41c:	8a b9       	out	0x0a, r24	; 10
 41e:	8a b1       	in	r24, 0x0a	; 10
 420:	8b 7f       	andi	r24, 0xFB	; 251
 422:	8a b9       	out	0x0a, r24	; 10
 424:	8e e8       	ldi	r24, 0x8E	; 142
 426:	80 bd       	out	0x20, r24	; 32
 428:	08 95       	ret

Disassembly of section .text.USART_voidSendData:

0000047e <USART_voidSendData>:
}

void USART_voidSendData(u8 copy_u8Data)
{
	/**wait for empty transmit buffer*/
	while (GET_BIT(UCSRA, USART_UCSRA_UDRE) == 0);
 47e:	5d 9b       	sbis	0x0b, 5	; 11
 480:	fe cf       	rjmp	.-4      	; 0x47e <USART_voidSendData>
	
	/**put data in buffer*/
	UDR = copy_u8Data;
 482:	8c b9       	out	0x0c, r24	; 12
 484:	08 95       	ret

Disassembly of section .text.KPD_voidInit:

000003a4 <KPD_voidInit>:
 3a4:	cf 93       	push	r28
 3a6:	c0 e0       	ldi	r28, 0x00	; 0
 3a8:	23 c0       	rjmp	.+70     	; 0x3f0 <KPD_voidInit+0x4c>
 3aa:	c4 30       	cpi	r28, 0x04	; 4
 3ac:	78 f4       	brcc	.+30     	; 0x3cc <KPD_voidInit+0x28>
 3ae:	8c 2f       	mov	r24, r28
 3b0:	90 e0       	ldi	r25, 0x00	; 0
 3b2:	a0 e0       	ldi	r26, 0x00	; 0
 3b4:	80 58       	subi	r24, 0x80	; 128
 3b6:	9f 4f       	sbci	r25, 0xFF	; 255
 3b8:	af 4f       	sbci	r26, 0xFF	; 255
 3ba:	fc 01       	movw	r30, r24
 3bc:	64 91       	lpm	r22, Z
 3be:	a7 fd       	sbrc	r26, 7
 3c0:	60 81       	ld	r22, Z
 3c2:	41 e0       	ldi	r20, 0x01	; 1
 3c4:	82 e0       	ldi	r24, 0x02	; 2
 3c6:	0e 94 42 00 	call	0x84	; 0x84 <DIO_voidSetPinDirection>
 3ca:	11 c0       	rjmp	.+34     	; 0x3ee <KPD_voidInit+0x4a>
 3cc:	8c 2f       	mov	r24, r28
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	04 97       	sbiw	r24, 0x04	; 4
 3d2:	09 2e       	mov	r0, r25
 3d4:	00 0c       	add	r0, r0
 3d6:	aa 0b       	sbc	r26, r26
 3d8:	84 58       	subi	r24, 0x84	; 132
 3da:	9f 4f       	sbci	r25, 0xFF	; 255
 3dc:	af 4f       	sbci	r26, 0xFF	; 255
 3de:	fc 01       	movw	r30, r24
 3e0:	64 91       	lpm	r22, Z
 3e2:	a7 fd       	sbrc	r26, 7
 3e4:	60 81       	ld	r22, Z
 3e6:	40 e0       	ldi	r20, 0x00	; 0
 3e8:	82 e0       	ldi	r24, 0x02	; 2
 3ea:	0e 94 42 00 	call	0x84	; 0x84 <DIO_voidSetPinDirection>
 3ee:	cf 5f       	subi	r28, 0xFF	; 255
 3f0:	c8 30       	cpi	r28, 0x08	; 8
 3f2:	d8 f2       	brcs	.-74     	; 0x3aa <KPD_voidInit+0x6>
 3f4:	6f ef       	ldi	r22, 0xFF	; 255
 3f6:	82 e0       	ldi	r24, 0x02	; 2
 3f8:	0e 94 15 02 	call	0x42a	; 0x42a <DIO_voidSetPortValue>
 3fc:	cf 91       	pop	r28
 3fe:	08 95       	ret

Disassembly of section .text.KPD_u8GetPressedKey:

0000025c <KPD_u8GetPressedKey>:
 25c:	af 92       	push	r10
 25e:	bf 92       	push	r11
 260:	cf 92       	push	r12
 262:	df 92       	push	r13
 264:	ef 92       	push	r14
 266:	0f 93       	push	r16
 268:	1f 93       	push	r17
 26a:	cf 93       	push	r28
 26c:	df 93       	push	r29
 26e:	d1 2c       	mov	r13, r1
 270:	55 c0       	rjmp	.+170    	; 0x31c <KPD_u8GetPressedKey+0xc0>
 272:	ad 2c       	mov	r10, r13
 274:	b1 2c       	mov	r11, r1
 276:	c5 01       	movw	r24, r10
 278:	0b 2c       	mov	r0, r11
 27a:	00 0c       	add	r0, r0
 27c:	aa 0b       	sbc	r26, r26
 27e:	80 58       	subi	r24, 0x80	; 128
 280:	9f 4f       	sbci	r25, 0xFF	; 255
 282:	af 4f       	sbci	r26, 0xFF	; 255
 284:	fc 01       	movw	r30, r24
 286:	c4 90       	lpm	r12, Z
 288:	a7 fd       	sbrc	r26, 7
 28a:	c0 80       	ld	r12, Z
 28c:	40 e0       	ldi	r20, 0x00	; 0
 28e:	6c 2d       	mov	r22, r12
 290:	82 e0       	ldi	r24, 0x02	; 2
 292:	0e 94 b8 00 	call	0x170	; 0x170 <DIO_voidSetPinValue>
 296:	10 e0       	ldi	r17, 0x00	; 0
 298:	39 c0       	rjmp	.+114    	; 0x30c <KPD_u8GetPressedKey+0xb0>
 29a:	c1 2f       	mov	r28, r17
 29c:	d0 e0       	ldi	r29, 0x00	; 0
 29e:	ce 01       	movw	r24, r28
 2a0:	0d 2e       	mov	r0, r29
 2a2:	00 0c       	add	r0, r0
 2a4:	aa 0b       	sbc	r26, r26
 2a6:	84 58       	subi	r24, 0x84	; 132
 2a8:	9f 4f       	sbci	r25, 0xFF	; 255
 2aa:	af 4f       	sbci	r26, 0xFF	; 255
 2ac:	fc 01       	movw	r30, r24
 2ae:	e4 90       	lpm	r14, Z
 2b0:	a7 fd       	sbrc	r26, 7
 2b2:	e0 80       	ld	r14, Z
 2b4:	6e 2d       	mov	r22, r14
 2b6:	82 e0       	ldi	r24, 0x02	; 2
 2b8:	0e 94 9d 01 	call	0x33a	; 0x33a <DIO_u8GetPinValue>
 2bc:	81 11       	cpse	r24, r1
 2be:	25 c0       	rjmp	.+74     	; 0x30a <KPD_u8GetPressedKey+0xae>
 2c0:	8f e4       	ldi	r24, 0x4F	; 79
 2c2:	93 ec       	ldi	r25, 0xC3	; 195
 2c4:	01 97       	sbiw	r24, 0x01	; 1
 2c6:	f1 f7       	brne	.-4      	; 0x2c4 <KPD_u8GetPressedKey+0x68>
 2c8:	00 c0       	rjmp	.+0      	; 0x2ca <KPD_u8GetPressedKey+0x6e>
 2ca:	00 00       	nop
 2cc:	6e 2d       	mov	r22, r14
 2ce:	82 e0       	ldi	r24, 0x02	; 2
 2d0:	0e 94 9d 01 	call	0x33a	; 0x33a <DIO_u8GetPinValue>
 2d4:	81 11       	cpse	r24, r1
 2d6:	19 c0       	rjmp	.+50     	; 0x30a <KPD_u8GetPressedKey+0xae>
 2d8:	04 c0       	rjmp	.+8      	; 0x2e2 <KPD_u8GetPressedKey+0x86>
 2da:	6e 2d       	mov	r22, r14
 2dc:	82 e0       	ldi	r24, 0x02	; 2
 2de:	0e 94 9d 01 	call	0x33a	; 0x33a <DIO_u8GetPinValue>
 2e2:	88 23       	and	r24, r24
 2e4:	d1 f3       	breq	.-12     	; 0x2da <KPD_u8GetPressedKey+0x7e>
 2e6:	85 01       	movw	r16, r10
 2e8:	00 0f       	add	r16, r16
 2ea:	11 1f       	adc	r17, r17
 2ec:	00 0f       	add	r16, r16
 2ee:	11 1f       	adc	r17, r17
 2f0:	c0 0f       	add	r28, r16
 2f2:	d1 1f       	adc	r29, r17
 2f4:	ce 01       	movw	r24, r28
 2f6:	dd 0f       	add	r29, r29
 2f8:	aa 0b       	sbc	r26, r26
 2fa:	84 59       	subi	r24, 0x94	; 148
 2fc:	9f 4f       	sbci	r25, 0xFF	; 255
 2fe:	af 4f       	sbci	r26, 0xFF	; 255
 300:	fc 01       	movw	r30, r24
 302:	84 91       	lpm	r24, Z
 304:	a7 fd       	sbrc	r26, 7
 306:	80 81       	ld	r24, Z
 308:	0e c0       	rjmp	.+28     	; 0x326 <KPD_u8GetPressedKey+0xca>
 30a:	1f 5f       	subi	r17, 0xFF	; 255
 30c:	14 30       	cpi	r17, 0x04	; 4
 30e:	28 f2       	brcs	.-118    	; 0x29a <KPD_u8GetPressedKey+0x3e>
 310:	41 e0       	ldi	r20, 0x01	; 1
 312:	6c 2d       	mov	r22, r12
 314:	82 e0       	ldi	r24, 0x02	; 2
 316:	0e 94 b8 00 	call	0x170	; 0x170 <DIO_voidSetPinValue>
 31a:	d3 94       	inc	r13
 31c:	93 e0       	ldi	r25, 0x03	; 3
 31e:	9d 15       	cp	r25, r13
 320:	08 f0       	brcs	.+2      	; 0x324 <KPD_u8GetPressedKey+0xc8>
 322:	a7 cf       	rjmp	.-178    	; 0x272 <KPD_u8GetPressedKey+0x16>
 324:	80 e0       	ldi	r24, 0x00	; 0
 326:	df 91       	pop	r29
 328:	cf 91       	pop	r28
 32a:	1f 91       	pop	r17
 32c:	0f 91       	pop	r16
 32e:	ef 90       	pop	r14
 330:	df 90       	pop	r13
 332:	cf 90       	pop	r12
 334:	bf 90       	pop	r11
 336:	af 90       	pop	r10
 338:	08 95       	ret

Disassembly of section .text.main:

0000044e <main>:


void main(void)
{
	
	USART_voidInit();
 44e:	0e 94 00 02 	call	0x400	; 0x400 <__EEPROM_REGION_LENGTH__>
	
	KPD_voidInit(); // portc
 452:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <KPD_voidInit>
	
	u8 local_u8Data = 0;
	
    while(true)
    {
		local_u8Data = KPD_u8GetPressedKey();
 456:	0e 94 2e 01 	call	0x25c	; 0x25c <KPD_u8GetPressedKey>
		if ((local_u8Data <= '9') && (local_u8Data >= '0'))
 45a:	90 ed       	ldi	r25, 0xD0	; 208
 45c:	98 0f       	add	r25, r24
 45e:	9a 30       	cpi	r25, 0x0A	; 10
 460:	d0 f7       	brcc	.-12     	; 0x456 <main+0x8>
		{
			USART_voidSendData(local_u8Data);
 462:	0e 94 3f 02 	call	0x47e	; 0x47e <USART_voidSendData>
 466:	f7 cf       	rjmp	.-18     	; 0x456 <main+0x8>

Disassembly of section .text.__dummy_fini:

0000048e <_fini>:
 48e:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000490 <__funcs_on_exit>:
 490:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000492 <__simulator_exit>:
 492:	08 95       	ret

Disassembly of section .text.exit:

00000468 <exit>:
 468:	ec 01       	movw	r28, r24
 46a:	0e 94 48 02 	call	0x490	; 0x490 <__funcs_on_exit>
 46e:	0e 94 47 02 	call	0x48e	; 0x48e <_fini>
 472:	ce 01       	movw	r24, r28
 474:	0e 94 49 02 	call	0x492	; 0x492 <__simulator_exit>
 478:	ce 01       	movw	r24, r28
 47a:	0e 94 45 02 	call	0x48a	; 0x48a <_Exit>

Disassembly of section .text._Exit:

0000048a <_Exit>:
 48a:	0e 94 34 00 	call	0x68	; 0x68 <_exit>
